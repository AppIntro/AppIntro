apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

group = 'com.github.AppIntro'

version = "6.2.0"

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 31
        versionCode 20
        versionName version

        consumerProguardFiles 'consumer-proguard-rules.pro'
        vectorDrawables.useSupportLibrary = true
    }
    lintOptions {
        ignore 'MissingTranslation', 'OldTargetApi', 'GradleDependency'
        warningsAsErrors true
        abortOnError true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.annotation:annotation:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
}

repositories {
    mavenCentral()
}

ktlint {
    version = "0.42.1"
    debug = false
    verbose = true
    android = false
    outputToConsole = true
    reporters {
        reporter "json"
    }
    ignoreFailures = false
    enableExperimentalRules = true
    kotlinScriptAdditionalPaths {
        include fileTree("scripts/")
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}

detekt {
    config = files("./detekt-config.yml")
    input = files("src/main/java")
}

tasks.withType(io.gitlab.arturbosch.detekt.Detekt) {
    exclude("**/resources/**,**/build/**")
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts.archives(sourcesJar)

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifact sourcesJar
                artifactId = project.name
                pom {
                    name = POM_NAME
                    description = POM_DESCRIPTION
                    url = POM_URL
                    licenses {
                        license {
                            name = POM_LICENSE_NAME
                            url = POM_LICENSE_URL
                        }
                    }
                    scm {
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_CONNECTION
                        url = POM_URL
                    }
                    developers {
                        developer {
                            id = 'paolorotolo'
                            name = 'Paolo Rotolo'
                            email = 'paolo@rotolo.dev'
                        }
                        developer {
                            id = 'cortinico'
                            name = 'Nicola Corti'
                            email = 'corti.nico@gmail.com'
                        }
                    }
                }
            }
        }
    }
}
